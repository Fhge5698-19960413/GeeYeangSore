@model IEnumerable<GeeYeangSore.Models.HReport>
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewBag.Title = "檢舉列表";
    var token = Antiforgery.GetAndStoreTokens(HttpContextAccessor.HttpContext).RequestToken;
    var messages = ViewBag.Messages as Dictionary<int, GeeYeangSore.Models.HMessage>;
}

<h1>檢舉列表</h1>

<div id="toast-container" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>檢舉ID</th>
            <th>訊息內容</th>
            <th>原因</th>
            <th>狀態</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var report in Model)
        {
            <tr id="report-row-@report.HReportId">
                <td>@report.HReportId</td>
                <td>
                    @{
                        string messageContent = "訊息不存在";
                        if (report.HMessageId.HasValue && messages != null && report.HMessageId.Value > 0 &&
                        messages.ContainsKey(report.HMessageId.Value))
                        {
                            messageContent = messages[report.HMessageId.Value].HContent;
                        }
                    }
                    @messageContent
                </td>
                <td>@report.HReason</td>
                <td id="status-@report.HReportId">@report.HStatus</td>
                <td>
                    <button class="btn btn-success btn-sm"
                        onclick="processReport(@report.HReportId, 'Approved')">核准</button>
                    <button class="btn btn-danger btn-sm" onclick="processReport(@report.HReportId, 'Rejected')">拒絕</button>
                    @{
                        if (report.HMessageId.HasValue && messages != null && report.HMessageId.Value > 0 &&
                        messages.ContainsKey(report.HMessageId.Value))
                        {
                            var message = messages[report.HMessageId.Value];
                            <a class="btn btn-info btn-sm"
                                href="/Admin/PrivateMessages/PrivateChat/@message.HSenderId/@message.HReceiverId"
                                target="_blank">詳細對話</a>
                        }
                        else
                        {
                            <button class="btn btn-info btn-sm" disabled>詳細對話</button>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    const token = '@token';

    function showToast(message, isSuccess = true) {
        const toastId = 'toast-' + Date.now();
        const bgColor = isSuccess ? '#28a745' : '#dc3545';

        const toast = `<div id="${toastId}" style="background:${bgColor};color:white;padding:10px 20px;margin-top:10px;border-radius:5px;">
                            ${message}
                        </div>`;

        document.getElementById('toast-container').insertAdjacentHTML('beforeend', toast);

        setTimeout(() => {
            document.getElementById(toastId)?.remove();
        }, 3000);
    }

    function processReport(reportId, status) {
        fetch('/Admin/PrivateMessages/ProcessReport', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `reportId=${reportId}&status=${status}&__RequestVerificationToken=${token}`
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('伺服器錯誤');
                }
                return response.text();
            })
            .then(() => {
                document.getElementById(`status-${reportId}`).innerText = status;
                showToast(`檢舉已${status == 'Approved' ? '核准' : '拒絕'}！`, true);
            })
            .catch(error => {
                console.error(error);
                showToast('處理失敗，請稍後再試！', false);
            });
    }
</script>