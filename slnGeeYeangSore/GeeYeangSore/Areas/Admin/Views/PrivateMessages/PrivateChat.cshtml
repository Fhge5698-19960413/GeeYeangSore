@* 私人聊天記錄頁面 *@
@model IEnumerable<GeeYeangSore.Models.HMessage>
@{
    ViewData["Title"] = "私人訊息詳情";
    var userNames = ViewBag.UserNames as Dictionary<(int?, string), string>;
    var senderId = Convert.ToInt32(ViewBag.SenderId);
    var receiverId = Convert.ToInt32(ViewBag.ReceiverId);
    var senderRole = ViewBag.SenderRole as string;
    var receiverRole = ViewBag.ReceiverRole as string;

    var headerSenderKey = ((int?)senderId, senderRole);
    var headerReceiverKey = ((int?)receiverId, receiverRole);
    var senderDisplayName = userNames != null && userNames.ContainsKey(headerSenderKey) ? userNames[headerSenderKey] :
    "未知用戶";
    var receiverDisplayName = userNames != null && userNames.ContainsKey(headerReceiverKey) ? userNames[headerReceiverKey] :
    "未知用戶";
    var senderRoleText = senderRole?.ToLower() == "tenant" ? "房客" : "房東";
    var receiverRoleText = receiverRole?.ToLower() == "tenant" ? "房客" : "房東";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header">
            <h2 class="card-title">私人訊息詳情</h2>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span class="h5">對話者：@senderDisplayName (@senderRoleText) 與 @receiverDisplayName
                        (@receiverRoleText)</span>
                </div>
                <div>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">返回列表</a>
                </div>
            </div>
        </div>
        <div class="card-body chat-container" style="height: 500px; overflow-y: auto;">
            @foreach (var message in Model)
            {
                var senderKey = (message.HSenderId, message.HSenderRole);
                var receiverKey = (message.HReceiverId, message.HReceiverRole);

                string senderName = userNames != null && userNames.ContainsKey(senderKey) ? userNames[senderKey] : "未知發送者";
                string receiverName = userNames != null && userNames.ContainsKey(receiverKey) ? userNames[receiverKey] :
                "未知接收者";

                <div class="message @(message.HSenderId == senderId ? "message-right" : "message-left")">
                    <div class="message-sender">@senderName</div>
                    <div class="message-content">@message.HContent</div>
                    <div class="message-timestamp">@message.HTimestamp?.ToString("yyyy/MM/dd HH:mm")</div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .chat-container {
        padding: 20px;
        background-color: #f8f9fa;
    }

    .message {
        max-width: 70%;
        margin-bottom: 15px;
        padding: 10px;
        border-radius: 10px;
        position: relative;
    }

    .message-right {
        margin-left: auto;
        background-color: #dcf8c6;
    }

    .message-left {
        margin-right: auto;
        background-color: #fff;
        border: 1px solid #e9ecef;
    }

    .message-sender {
        font-size: 0.9em;
        font-weight: bold;
        margin-bottom: 5px;
        color: #666;
    }

    .message-content {
        word-wrap: break-word;
        line-height: 1.4;
    }

    .message-timestamp {
        font-size: 0.8em;
        color: #666;
        margin-top: 5px;
        text-align: right;
    }

    .deleted-message {
        font-style: italic;
        color: #999;
    }

    /* 防止訊息跳動 */
    .card-body {
        scroll-behavior: smooth;
        overflow-anchor: none;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            // 頁面載入完成後滾動到最底部
            var chatContainer = $('.chat-container');
            chatContainer.scrollTop(chatContainer[0].scrollHeight);

            // 防止自動滾動
            chatContainer.on('scroll', function () {
                $(this).css('scroll-behavior', 'auto');
            });
        });
    </script>
}
